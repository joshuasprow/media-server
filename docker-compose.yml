version: "3"

services:
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - PLEX_CLAIM= # required for first startup
    volumes:
      - ${CONFIG}/plex:/config
      - ${DATA}/tv:/tv
      - ${DATA}/movies:/movies
    ports:
      - 32400:32400
    restart: unless-stopped

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/jackett:/config
      - ${DATA}/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  deluge:
    image: ghcr.io/linuxserver/deluge
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${CONFIG}/deluge:/config
      - ${DATA}/downloads:/downloads
      - ./scripts/extract.sh:/scripts/extract.sh
    ports:
      - 8112:8112
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    depends_on:
      - jackett
      - deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/radarr:/config
      - ${DATA}/movies:/movies
      - ${DATA}/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - jackett
      - deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/sonarr:/config
      - ${DATA}/tv:/tv
      - ${DATA}/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  server:
    container_name: server
    build:
      context: ./server
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./server/static:/app/static
    ports:
      - 80:80
    restart: unless-stopped

  # configurator:
  #   build:
  #     context: ./configurator
  #   container_name: configurator
  #   depends_on:
  #     - sonarr
  #   environment:
  #     HOST: sonarr
  #     API_KEY: ${API_KEY}
  #     USER: ${USERNAME}
  #     PASS: ${PASSWORD}

